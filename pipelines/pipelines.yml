---
groups:
  - name: bosh-azure-cpi-e2e-test
    jobs:
      - build-candidate
      - e2e-unmanaged-disks-availability-sets
      - e2e-managed-disks-availability-sets
      - e2e-availability-zones
      - e2e-user-assigned-managed-identity

shared:
  - &azure-environment-params
    AZURE_ENVIRONMENT:                    {{azure_environment}}
    AZURE_TENANT_ID:                      {{azure_tenant_id}}
    AZURE_SUBSCRIPTION_ID:                {{azure_subscription_id}}
    AZURE_CLIENT_ID:                      {{azure_client_id}}
    AZURE_CLIENT_SECRET:                  {{azure_client_secret}}

  - &create-e2e-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: e2e/terraform

  - &destroy-e2e-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: e2e/terraform
    get_params:
      action: destroy

  - &director-vars-file
    DIRECTOR_VARS_FILE:
      environment:     {{azure_environment}}
      subscription_id: {{azure_subscription_id}}
      tenant_id:       {{azure_tenant_id}}
      client_id:       {{azure_client_id}}
      client_secret:   {{azure_client_secret}}
      location:        {{azure_location}}
      dns_recursor_ip: 168.63.129.16

  - &prepare-director-with-unmanaged-disks
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params:
      INFRASTRUCTURE:     azure
      OPTIONAL_OPS_FILE: |
        -o pipelines/shared/assets/ops/remove-hm.yml
        -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        -o bosh-deployment/azure/custom-environment.yml
        -o bosh-deployment/azure/use-location.yml
      <<: *director-vars-file

  - &prepare-director-with-managed-disks
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params:
      INFRASTRUCTURE:     azure
      OPTIONAL_OPS_FILE: |
        -o pipelines/shared/assets/ops/remove-hm.yml
        -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        -o bosh-deployment/azure/custom-environment.yml
        -o bosh-deployment/azure/use-location.yml
        -o bosh-deployment/azure/use-managed-disks.yml
      <<: *director-vars-file

  - &prepare-director-with-user-assigned-managed-identity
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params:
      INFRASTRUCTURE:     azure
      OPTIONAL_OPS_FILE: |
        -o pipelines/shared/assets/ops/remove-hm.yml
        -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        -o bosh-deployment/azure/custom-environment.yml
        -o bosh-deployment/azure/use-location.yml
        -o bosh-deployment/azure/use-managed-disks.yml
        -o bosh-deployment/azure/use-user-assigned-managed-identity.yml
      <<: *director-vars-file

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &update-cloud-config
    task: update-cloud-config
    file: e2e/tasks/update-cloud-config/task.yml

  - &run-e2e
    task: run-e2e
    file: e2e/tasks/e2e-tests/task.yml

  - &run-e2e-common-cases
    aggregate:
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: manual-network
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: dynamic-network
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: vip-network
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: persistent-disk
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: vm-resources
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: vm-strategy
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: application-security-groups
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: ip-forwarding
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: accelerated-networking
      - <<: *run-e2e
        params:
          <<: *azure-environment-params
          SCENARIO: dynamic-public-ip

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

  - &ensure-cleanup
    task: ensure-cleanup
    file: bosh-cpi-src/ci/tasks/ensure-cleanup.yml
    params:
      <<: *azure-environment-params

jobs:
  - name: build-candidate
    serial: true
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, get: version-semver, params: {bump: patch}}
        - {trigger: false, get: bosh-cli}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
      - put: bosh-cpi-dev-artifacts
        params: {file: candidate/*.tgz}

  - name: e2e-unmanaged-disks-availability-sets
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: e2e,             trigger: false}
      - <<: *create-e2e-environment
      - <<: *prepare-director-with-unmanaged-disks
      - do:
        - <<: *deploy-director
        - <<: *update-cloud-config
        - aggregate:
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: default-storage-account
              COUNT: 2
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: availability-sets
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: multiple-storage-accounts
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: regional-load-balancer
          - <<: *run-e2e-common-cases
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-e2e-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: e2e-managed-disks-availability-sets
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: e2e,             trigger: false}
      - <<: *create-e2e-environment
      - <<: *prepare-director-with-managed-disks
      - do:
        - <<: *deploy-director
        - <<: *update-cloud-config
        - aggregate:
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: managed-disks
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: persistent-disk-managed
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: availability-sets
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: regional-load-balancer
          - <<: *run-e2e-common-cases
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-e2e-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: e2e-availability-zones
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: e2e,             trigger: false}
      - <<: *create-e2e-environment
      - <<: *prepare-director-with-managed-disks
      - do:
        - <<: *deploy-director
        - <<: *update-cloud-config
          params:
            AVAILABILITY_ZONES: true
        - aggregate:
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: managed-disks
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: zonal-load-balancer
          - <<: *run-e2e-common-cases
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-e2e-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: e2e-user-assigned-managed-identity
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: e2e,             trigger: false}
      - <<: *create-e2e-environment
      - <<: *prepare-director-with-user-assigned-managed-identity
      - do:
        - <<: *deploy-director
        - <<: *update-cloud-config
        - aggregate:
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: managed-identity
          - <<: *run-e2e
            params:
              <<: *azure-environment-params
              SCENARIO: regional-load-balancer
          - <<: *run-e2e-common-cases
        ensure:
          do:
            - <<: *teardown
            - <<: *destroy-e2e-environment
          ensure:
            do:
              - <<: *ensure-cleanup

resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: beta-backend
  - name: azure-blob
    type: docker-image
    source:
      repository: cfcloudops/azure-blobstore-concourse-resource

resources:
  - name: e2e
    type: git
    source:
      branch: e2e
      uri: https://github.com/CloudFoundryOnAzure/azure-bosh-acceptance-test.git
  - name: bosh-cpi-dev-artifacts
    type: azure-blob
    source:
      regexp:               bosh-azure-cpi-(\d+\.\d+\.\d+)\.tgz
      environment:          {{azure_environment}}
      storage_account_name: {{storage_account_name}}
      storage_access_key:   {{storage_account_access_key}}
      container:            {{dev_artifacts_container_name}}
  - name: bosh-cpi-src-in
    type: git
    source:
      uri:    {{cpi_repo_uri}}
      branch: {{cpi_repo_branch}}
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
  - name: version-semver
    type: semver
    source:
      file:        current-version # dev-release version
      driver:      git
      uri:         {{version_semver_repo_uri}}
      branch:      {{version_semver_repo_branch}}
      private_key: {{version_semver_repo_private_key}}
  - name: environment
    type: terraform_type
    source:
      backend_type: azurerm
      backend_config:
        key:                  terraform.tfstate
        storage_account_name: {{storage_account_name}}
        access_key:           {{storage_account_access_key}}
        container_name:       {{environment_container_name}}
        environment:          {{terraform_backend_config_environment}}
      vars:
        azure_environment:     {{azure_environment}}
        azure_subscription_id: {{azure_subscription_id}}
        azure_client_id:       {{azure_client_id}}
        azure_client_secret:   {{azure_client_secret}}
        azure_tenant_id:       {{azure_tenant_id}}
        location:              {{azure_location}}
        resource_group_prefix: {{resource_group_prefix}}
  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: pipelines
    type: git
    source:
      uri: https://github.com/CloudFoundryOnAzure/bosh-cpi-certification
      branch: master
  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh
  - name: azure-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-ubuntu-xenial-go_agent
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/CloudFoundryOnAzure/bosh-deployment
      branch: master
